package com.example.a5crowns;

import com.example.a5crowns.Card;
import com.example.a5crowns.Deck;

import java.util.Random;

/*******************************************************
  Deals cards from two decks
  @author Kevin Bagnato
  @since 10/27/2019
******************************************************** */

public class CardDealer
{
    // *********************************************************
    // **************** Configuration Variables ****************
    // *********************************************************

    // *********************************************************
    // ******************** Class Constants ********************
    // *********************************************************

    // *********************************************************
    // ******************** Class Variables ********************
    // *********************************************************

    /** the two decks in deal*/
	private Deck firstDeck, secondDeck;
	
    // *********************************************************
    // ******************** GUI Components *********************
    // *********************************************************

    // *********************************************************
    // ******************** Constructor ************************
    // *********************************************************

	/**
	 * constructor
	 */
	public CardDealer() {
		firstDeck = new Deck();
		secondDeck = new Deck();
	}

    // *********************************************************
    // ******************** Paint - View ***********************
    // *********************************************************

    // *********************************************************
    // ******************** actionPerformed - Controller *******
    // *********************************************************

    // *********************************************************
    // ******************** Selectors **************************
    // *********************************************************
	/**
	 * Deal a random Card from either Deck
	 */
	public Card dealCard() {
		// randomly select card from one of the two decks until both are empty
		
		if (firstDeck.isEmpty()) {
			if (secondDeck.isEmpty()) {
				return null;
			}
			else {
				return secondDeck.dealCard();
			}
		}
		else {
			if (secondDeck.isEmpty()) {				
				return firstDeck.dealCard();
			}
			else {
				int choice = new Random().nextInt() % 2;
				if (0 == choice) {
					return firstDeck.dealCard();
				}
				else {
					return secondDeck.dealCard();
				}
			}
			
		}
		
	}
	
    // *********************************************************
    // ******************** Mutators ***************************
    // *********************************************************
	/**
	 * Update the wildcard in each Deck
	 * @param int face the current wildcard
	 */
	public void updateWildcards(int face) {
		firstDeck.updateWildcards(face);
		secondDeck.updateWildcards(face);
	}
	
    // *********************************************************
    // ******************** Code Generation ********************
    // *********************************************************

    // *********************************************************
    // ******************** Code Explanation *******************
    // *********************************************************

    // *********************************************************
    // ******************** Utility Methods ********************
    // *********************************************************

    // *********************************************************
    // ******************** Printing Methods *******************
    // *********************************************************
	/** 
	 * Return both Decks as a String
	 */
	public String toString() {
		return "Deck 1: " + firstDeck.toString() + "\n"
				+ "Deck 2: " + secondDeck.toString();
	}
	
    // *********************************************************
    // ******************** Debugging Methods ******************
    // *********************************************************
};

    // *********************************************************
    // ******************** Trash Methods **********************
    // *********************************************************
